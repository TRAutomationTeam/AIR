name: AI Code Review

on:
  push:
    paths:
      - 'TR_Sanity_TaxCaddy/**/*.xaml'
  pull_request:
    paths:
      - 'TR_Sanity_TaxCaddy/**/*.xaml'

jobs:
  review:
    runs-on: self-hosted
    env:
      EXTRACT_PATH: D:/wrk
    steps:
      - name: Setup 7-Zip
        shell: pwsh
        run: |
          $7zipUrl = "https://www.7-zip.org/a/7z2301-x64.exe"
          $7zipInstaller = "$env:TEMP\7z2301-x64.exe"
          Invoke-WebRequest -Uri $7zipUrl -OutFile $7zipInstaller
          Start-Process -FilePath $7zipInstaller -Args "/S" -Wait
          $env:PATH = "C:\Program Files\7-Zip;$env:PATH"

      - name: Install and Configure Git
        shell: pwsh
        run: |
          Write-Host "Installing Git..."
          $gitUrl = "https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.2/Git-2.42.0.2-64-bit.exe"
          $gitInstaller = "$env:TEMP\GitInstaller.exe"
          Invoke-WebRequest -Uri $gitUrl -OutFile $gitInstaller
          Start-Process -FilePath $gitInstaller -Args "/VERYSILENT /NORESTART" -Wait
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          
          Write-Host "Configuring Git long paths..."
          & 'C:\Program Files\Git\cmd\git.exe' config --system core.longpaths true
          if ($LASTEXITCODE -ne 0) { 
            Write-Error "Failed to configure Git long paths"
            exit 1
          }
          
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          sparse-checkout: |
            TR_Sanity_TaxCaddy
            src
            config

      - name: Extract if needed
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          try {
            if (Test-Path "${{ github.workspace }}/*.tar.gz") {
              $extractPath = "D:/wrk"
              Write-Host "Creating extraction directory at $extractPath"
              New-Item -ItemType Directory -Path $extractPath -Force
              
              Write-Host "Enabling long path support in Windows..."
              try {
                # Try to enable long path support in Windows registry
                if (-not (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem")) {
                  New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Force
                }
                Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -Type DWord -ErrorAction Stop
              } catch {
                Write-Warning "Could not enable long paths in Windows registry. Continuing anyway: $_"
              }
              
              Write-Host "Extracting archive..."
              $archivePath = (Get-Item "${{ github.workspace }}/*.tar.gz").FullName
              Write-Host "Archive path: $archivePath"
              & "C:\Program Files\7-Zip\7z.exe" x "$archivePath" -o"$extractPath" -y
              if ($LASTEXITCODE -ne 0) { 
                throw "7-Zip extraction failed with exit code $LASTEXITCODE" 
              }
              
              Write-Host "Moving extracted files..."
              Get-ChildItem $extractPath -Force | ForEach-Object {
                Write-Host "Moving $_..."
                Move-Item -Path $_.FullName -Destination ${{ github.workspace }} -Force
              }
            } else {
              Write-Host "No .tar.gz files found in workspace"
            }
          }
          catch {
            Write-Error "Extraction failed: $_"
            throw
          }

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r src/requirements.txt

      - name: Set environment variables
        env:
          AI_ARENA_API_KEY: ${{ secrets.AI_ARENA_API_KEY }}
          AI_ARENA_ENDPOINT: ${{ secrets.AI_ARENA_ENDPOINT }}
        run: echo "Environment variables set"

      - name: Run AI code review
        run: python src/main.py

      - name: Upload AI code review reports
        uses: actions/upload-artifact@v4
        with:
          name: ai-code-review-reports
          path: |
            src/AI Reports/*.html
            src/AI Reports/*.json
